[{"C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\index.js":"1","C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\reportWebVitals.js":"2","C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\store.js":"3","C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\App.js":"4","C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\components\\Available.js":"5","C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\features\\quizSlice.js":"6","C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\components\\Score.js":"7","C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\components\\Create.js":"8","C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\components\\Questions.js":"9","C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\components\\Show.js":"10","C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\components\\Home.js":"11"},{"size":658,"mtime":1695121319458,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1695109327720,"results":"14","hashOfConfig":"13"},{"size":196,"mtime":1699073797872,"results":"15","hashOfConfig":"13"},{"size":1195,"mtime":1695645062222,"results":"16","hashOfConfig":"13"},{"size":1521,"mtime":1695657744222,"results":"17","hashOfConfig":"13"},{"size":4381,"mtime":1695749751211,"results":"18","hashOfConfig":"13"},{"size":943,"mtime":1695749395846,"results":"19","hashOfConfig":"13"},{"size":1363,"mtime":1699076048843,"results":"20","hashOfConfig":"13"},{"size":9528,"mtime":1699077913144,"results":"21","hashOfConfig":"13"},{"size":3955,"mtime":1699106617387,"results":"22","hashOfConfig":"13"},{"size":619,"mtime":1695403332351,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xpredz",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\index.js",[],[],"C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\reportWebVitals.js",[],[],"C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\store.js",[],[],"C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\App.js",[],[],"C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\components\\Available.js",[],[],"C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\features\\quizSlice.js",[],[],"C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\components\\Score.js",["59","60"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Score = () => {\r\n    const { quizID } = useParams();\r\n    const score = useSelector(store => store.quiz.score);\r\n    const [qlen, setLen] = useState(0);\r\n    const [percentage, setPercentage] = useState(0);\r\n    useEffect(() => {\r\n        const fetch_score = async () => {\r\n            const resp = await axios.get(`http://localhost:4000/${quizID}`);\r\n            setLen(resp.data[0].ques.length);\r\n        }\r\n        fetch_score();\r\n    }, []);\r\n    useEffect(() => setPercentage((score / qlen) * 100), [qlen]);\r\n    return (\r\n        <div className=\"container-fluid d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n            <p className=\"fs-1\">You Scored: {percentage.toFixed(2)}%</p>\r\n        </div>\r\n    );\r\n}\r\nexport default Score;","C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\components\\Create.js",[],[],"C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\components\\Questions.js",[],[],"C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\components\\Show.js",["61"],[],"import { useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { UpdateScore, reset, submittedAns } from \"../features/quizSlice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Show = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [options, setOptions] = useState([]);\r\n    const [choice, setChoice] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [ans, setAns] = useState([]);\r\n    const [description, setDesc] = useState('');\r\n    const { quizID } = useParams(); // it is like req.params in expressjs see in app.js how i send id\r\n    useEffect(() => {\r\n        const fetch_data = async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:4000/${quizID}`);\r\n                console.log(res.data);\r\n                const data = res.data[0]; // it's giving array\r\n                console.log(data);\r\n                setQuestions(data.ques);\r\n                setAns(data.ans);\r\n                setOptions(data.options);\r\n                setChoice(data.choice);\r\n                setTitle(data.title);\r\n                setDesc(data.description);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetch_data();\r\n        dispatch(reset()); // I need to reset state to its intial because when i see the score and come back to show redux is storing previous score ans sub_ans\r\n    }, []);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const handleOption = (e, qindex, oindex) => {\r\n        const opt = options[qindex][oindex];\r\n        const type = e.target.type;\r\n        dispatch(submittedAns({ qindex, opt, type}));\r\n    }\r\n    const handleSubmit = () => {\r\n        const len = questions.length;\r\n        dispatch(UpdateScore({choice, ans, len}));\r\n        navigate(`/score/${quizID}`);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid d-flex flex-column align-items-center mb-3\">\r\n                <div className=\"d-flex flex-column w-50 card py-4 px-3 position-relative shadow mt-2\" style={{backgroundColor: 'rgb(245, 245, 245)'}}>\r\n                    <div className=\"w-100 ribbon rounded-top\"></div>\r\n                    <p className=\"mb-3 fs-3\" id=\"title\">{ title }</p>\r\n                    <p className=\"mb-3 fs-5\" id=\"desc\">{ description }</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center\">\r\n                {questions.map((ques,index) => {\r\n                    return (\r\n                        <div className=\"d-flex flex-column w-50 card py-4 px-3 position-relative shadow ques-card mb-3\">\r\n                            <p className=\"fw-bold\">{ques}?</p>\r\n                            <div className=\"options d-flex flex-column w-100 align-items-start\">\r\n                                {options[index].map((option, idx) => {\r\n                                    return (\r\n                                        <div className=\"form-check m-2\">\r\n                                            <input type={choice[index]} className=\"form-check-input\" name={index} id={String(index) + String(idx)} onChange={(e) => handleOption(e, index, idx)}/>\r\n                                            <label htmlFor={String(index) + String(idx)}>{option}</label>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n                <div className=\"w-50 d-flex justify-content-end\">\r\n                    <button type=\"button\" className=\"btn btn-outline-success\" onClick={handleSubmit}>Submit</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Show;","C:\\Users\\satya\\Desktop\\courses\\quiz\\front-end\\src\\components\\Home.js",[],[],{"ruleId":"62","severity":1,"message":"63","line":17,"column":8,"nodeType":"64","endLine":17,"endColumn":10,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":18,"column":58,"nodeType":"64","endLine":18,"endColumn":64,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"68","line":34,"column":8,"nodeType":"64","endLine":34,"endColumn":10,"suggestions":"69"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'quizID'. Either include it or remove the dependency array.","ArrayExpression",["70"],"React Hook useEffect has a missing dependency: 'score'. Either include it or remove the dependency array.",["71"],"React Hook useEffect has missing dependencies: 'dispatch' and 'quizID'. Either include them or remove the dependency array.",["72"],{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [quizID]",{"range":"79","text":"80"},"Update the dependencies array to be: [qlen, score]",{"range":"81","text":"82"},"Update the dependencies array to be: [dispatch, quizID]",{"range":"83","text":"84"},[614,616],"[quizID]",[677,683],"[qlen, score]",[1501,1503],"[dispatch, quizID]"]