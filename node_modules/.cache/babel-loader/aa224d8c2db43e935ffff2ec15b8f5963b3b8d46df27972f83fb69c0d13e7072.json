{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import{toast}from\"react-toastify\";var initialState={ques:[],// array\nans:[],// array of arrays\noptions:[],choice:[],title:\"Untitled\",sub_ans:[],score:0,description:\"Description\"};var quizSlice=createSlice({name:'quiz',initialState:initialState,reducers:{AddTotal:function AddTotal(state,action){state.ques.push(action.payload.question);state.options.push(action.payload.option);state.ans.push(action.payload.ans);state.choice.push(action.payload.choice);},EditQues:function EditQues(state,action){state.ques=action.payload.ques;},DeleteQues:function DeleteQues(state,action){state.ques=state.ques.filter(function(item){return item!==state.ques[action.payload.index];});},EditOptions:function EditOptions(state,action){state.options=action.payload.options;},DeleteOption:function DeleteOption(state,action){var i=action.payload.qindex;// ques index\nvar j=action.payload.oindex;// option index\nif(state.options[i].length===1){toast.info('Question must have one option');}else{var deleteElement=state.options[i][j];state.options[i]=state.options[i].filter(function(item){return item!==deleteElement;});}},EditAns:function EditAns(state,action){state.ans=action.payload.ans;},EditChoice:function EditChoice(state,action){state.choice=action.payload.choice;},AddTitle:function AddTitle(state,action){var title=action.payload.title;var description=action.payload.description;if(title)state.title=title;if(description)state.description=description;},UpdateScore:function UpdateScore(state,action){var choice=action.payload.choice;var len=action.payload.len;var ans=action.payload.ans;var _loop=function _loop(){if(!state.sub_ans[i])return 1;// continue\nelse if(choice[i]==='radio'&&state.sub_ans[i][0]===ans[i])state.score+=1;else if(choice[i]==='checkbox'){var answers=ans[i].split(',');if(answers.length===state.sub_ans[i].length){var flag=0;var _loop2=function _loop2(j){if(!state.sub_ans.filter(function(item){return item===answers[j];})){flag=1;return 1;// break\n};};for(var j=0;j<answers.length;j++){if(_loop2(j))break;}if(flag===0)state.score+=1;}}};for(var i=0;i<len;i++){if(_loop())continue;}},submittedAns:function submittedAns(state,action){var type=action.payload.type;var index=action.payload.qindex;var ans=action.payload.opt;if(type==='radio'){state.sub_ans[index]=[ans];}else{if(!state.sub_ans[index]){console.log('if');state.sub_ans[index]=[ans];}else if(state.sub_ans[index].find(function(item){return item===ans;})){console.log('else if');state.sub_ans[index]=state.sub_ans[index].filter(function(item){return item!==ans;});}else{state.sub_ans[index].push(ans);console.log('else');}}},reset:function reset(state){state.ques=[];state.ans=[];state.options=[];state.choice=[];state.sub_ans=[];state.title=\"Untitled\";state.score=0;state.description=\"Description\";}}});var _quizSlice$actions=quizSlice.actions,EditQues=_quizSlice$actions.EditQues,EditOptions=_quizSlice$actions.EditOptions,EditAns=_quizSlice$actions.EditAns,EditChoice=_quizSlice$actions.EditChoice,AddTotal=_quizSlice$actions.AddTotal,AddTitle=_quizSlice$actions.AddTitle,UpdateScore=_quizSlice$actions.UpdateScore,DeleteOption=_quizSlice$actions.DeleteOption,DeleteQues=_quizSlice$actions.DeleteQues,submittedAns=_quizSlice$actions.submittedAns,reset=_quizSlice$actions.reset;export{EditQues,EditOptions,EditAns,EditChoice,AddTotal,AddTitle,UpdateScore,DeleteOption,DeleteQues,submittedAns,reset};export default quizSlice.reducer;","map":{"version":3,"names":["createSlice","toast","initialState","ques","ans","options","choice","title","sub_ans","score","description","quizSlice","name","reducers","AddTotal","state","action","push","payload","question","option","EditQues","DeleteQues","filter","item","index","EditOptions","DeleteOption","i","qindex","j","oindex","length","info","deleteElement","EditAns","EditChoice","AddTitle","UpdateScore","len","_loop","answers","split","flag","_loop2","submittedAns","type","opt","console","log","find","reset","_quizSlice$actions","actions","reducer"],"sources":["C:/Users/satya/Desktop/courses/quiz/front-end/src/features/quizSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst initialState = {\r\n    ques: [], // array\r\n    ans: [], // array of arrays\r\n    options: [],\r\n    choice: [],\r\n    title: \"Untitled\",\r\n    sub_ans: [],\r\n    score: 0,\r\n    description: \"Description\"\r\n}\r\nconst quizSlice = createSlice({\r\n    name: 'quiz',\r\n    initialState,\r\n    reducers: {\r\n        AddTotal: (state, action) => {\r\n            state.ques.push(action.payload.question);\r\n            state.options.push(action.payload.option);\r\n            state.ans.push(action.payload.ans);\r\n            state.choice.push(action.payload.choice);\r\n        },\r\n        EditQues: (state, action) => {\r\n            state.ques = action.payload.ques;\r\n        },\r\n        DeleteQues: (state, action) => {\r\n            state.ques = state.ques.filter(item => item !== state.ques[action.payload.index]);\r\n        },\r\n        EditOptions: (state, action) => {\r\n            state.options = action.payload.options;\r\n        },\r\n        DeleteOption: (state, action) => {\r\n            const i = action.payload.qindex; // ques index\r\n            const j = action.payload.oindex; // option index\r\n            if (state.options[i].length === 1) {\r\n                toast.info('Question must have one option');\r\n            }\r\n            else {\r\n                const deleteElement = state.options[i][j];\r\n                state.options[i] = state.options[i].filter(item => item !== deleteElement);\r\n            }\r\n        },\r\n        EditAns: (state, action) => {\r\n            state.ans = action.payload.ans;\r\n        },\r\n        EditChoice: (state, action) => {\r\n            state.choice = action.payload.choice;\r\n        },\r\n        AddTitle: (state, action) => {\r\n            const title = action.payload.title;\r\n            const description = action.payload.description;\r\n            if(title) state.title = title;\r\n            if(description) state.description = description;\r\n        },\r\n        UpdateScore: (state, action) => {\r\n            const choice = action.payload.choice;\r\n            const len = action.payload.len;\r\n            const ans = action.payload.ans;\r\n            for (let i = 0; i < len; i++){\r\n                if (!state.sub_ans[i]) continue;\r\n                else if (choice[i] === 'radio' && state.sub_ans[i][0] === ans[i]) state.score += 1;\r\n                else if (choice[i] === 'checkbox') {\r\n                    const answers = ans[i].split(',');\r\n                    if (answers.length === state.sub_ans[i].length) {\r\n                        let flag = 0;\r\n                        for (let j = 0; j < answers.length; j++){\r\n                            if (!state.sub_ans.filter(item => item === answers[j])) {\r\n                                flag = 1;\r\n                                break;\r\n                            };\r\n                        }\r\n                        if (flag === 0) state.score += 1;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        submittedAns: (state, action) => {\r\n            const type = action.payload.type;\r\n            const index = action.payload.qindex;\r\n            const ans = action.payload.opt;\r\n            if (type === 'radio') {\r\n                state.sub_ans[index] = [ans];\r\n            }\r\n            else {\r\n                if (!state.sub_ans[index]) {\r\n                    console.log('if');\r\n                    state.sub_ans[index] = [ans];\r\n                }\r\n                else if (state.sub_ans[index].find(item => item === ans)) {\r\n                    console.log('else if');\r\n                    state.sub_ans[index] = state.sub_ans[index].filter(item => item !== ans);\r\n                }\r\n                else {\r\n                    state.sub_ans[index].push(ans);\r\n                    console.log('else');\r\n                }\r\n            }\r\n        },\r\n        reset: (state) => {\r\n            state.ques = [];\r\n            state.ans = [];\r\n            state.options = [];\r\n            state.choice = [];\r\n            state.sub_ans = [];\r\n            state.title = \"Untitled\";\r\n            state.score = 0;\r\n            state.description = \"Description\";\r\n        }\r\n    }\r\n});\r\nexport const { EditQues, EditOptions, EditAns, EditChoice, AddTotal, AddTitle, UpdateScore, DeleteOption, DeleteQues, submittedAns, reset }  = quizSlice.actions;\r\nexport default quizSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}